[
  /*
                                                  _..._       .-'''-.                                                  
                                      .---.    .-'_..._''.   '   _    \                                                
                        __.....__     |   |  .' .'      '.\/   /` '.   \  __  __   ___         __.....__               
            _     _ .-''         '.   |   | / .'          .   |     \  ' |  |/  `.'   `.   .-''         '.             
      /\    \\   ///     .-''"'-.  `. |   |. '            |   '      |  '|   .-.  .-.   ' /     .-''"'-.  `.           
      `\\  //\\ ///     /________\   \|   || |            \    \     / / |  |  |  |  |  |/     /________\   \          
        \`//  \'/ |                  ||   || |             `.   ` ..' /  |  |  |  |  |  ||                  |          
          \|   |/ \    .-------------'|   |. '                '-...-'`   |  |  |  |  |  |\    .-------------'        
          '        \    '-.____...---.|   | \ '.          .              |  |  |  |  |  | \    '-.____...---.          
                    `.             .' |   |  '. `._____.-'/              |__|  |__|  |__|  `.             .'           
                      `''-...... -'   '---'    `-.______ /                                   `''-...... -'             
    */
  /* ---------------- Navigate through console ----------- */
  // Toggle terminal
  {
    "key": "ctrl+oem_3",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  // Up and down through terminals
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "ctrl+tab",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  // New terminal and close terminal
  {
    "key": "ctrl+t",
    "command": "workbench.action.terminal.new",
    "when": "terminalFocus && terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  {
    "key": "ctrl+w",
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocus"
  },
  // Find
  {
    "key": "f3",
    "command": "workbench.action.terminal.focusFind",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  /* ----------------------------------------------------- */
  /* --------------- Navigate through tabs --------------- */
  // Close current window
  {
    "key": "ctrl+w",
    "command": "workbench.action.closeActiveEditor",
    "when": "!terminalFocus"
  },
  // Move to the explorer or the editor
  {
    "key": "ctrl+h",
    "when": "!terminalFocus",
    "command": "workbench.action.navigateLeft"
  },
  {
    "key": "ctrl+h",
    "when": "!terminalFocus && !editorTextFocus",
    "command": "workbench.action.focusSideBar"
  },
  {
    "key": "ctrl+l",
    "when": "!terminalFocus",
    "command": "workbench.action.navigateRight"
  },
  // Navigate through editors
  {
    "key": "tab",
    "command": "workbench.action.nextEditor",
    "when": "!editorTextFocus && !inQuickOpen && !terminalFocus"
  },
  {
    "key": "shift+tab",
    "command": "workbench.action.previousEditor",
    "when": "!editorTextFocus && !inQuickOpen && !terminalFocus"
  },
  /* ----------------------------------------------------- */
  /* -------------- Navigate through files --------------- */
  // Open a new folder
  {
    "key": "ctrl+o",
    "command": "workbench.action.files.openFolder",
    "when": "openFolderWorkspaceSupport"
  },
  // Breadcrumbs left and right
  {
    "key": "l",
    "command": "breadcrumbs.focusNext",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "key": "h",
    "command": "breadcrumbs.focusPrevious",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  /* ----------------------------------------------------- */
  /* -------------- Navigate editor window --------------- */
  // Go through code suggestions
  {
    "key": "tab",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus && !inQuickOpen"
  },
  {
    "key": "shift+tab",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus && !inQuickOpen"
  },
  /* ----------------------------------------------------- */
  /* ------------------ Miscellaneous -------------------- */
  // Save/format file
  {
    "key": "ctrl+f",
    "command": "workbench.action.files.save"
  },
  // Scroll through QuickFix
  {
    "key": "tab",
    "command": "selectNextCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "shift+tab",
    "command": "selectPrevCodeAction",
    "when": "codeActionMenuVisible"
  },
  // When pressing ctrl+p it going up or down with tab or shift+tab
  {
    "key": "tab",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+shift+g",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  // NeoVim
  {
    "command": "vscode-neovim.send",
    "key": "tab",
    "when": "editorTextFocus && neovim.mode != insert",
    "args": "tab"
  },
  {
    "command": "vscode-neovim.send",
    "key": "shift+tab",
    "when": "editorTextFocus && neovim.mode != insert",
    "args": "<S-tab>"
  },
  {
    "command": "vscode-neovim.send",
    "key": "ctrl+v",
    "when": "editorTextFocus && neovim.mode != insert",
    "args": "<C-v>"
  },
  {
    "command": "vscode-neovim.send",
    "key": "ctrl+g",
    "when": "editorTextFocus && neovim.mode != insert",
    "args": "<C-g>"
  },
  {
    "command": "vscode-neovim.send",
    "key": "ctrl+c",
    "when": "editorTextFocus && neovim.mode == visual",
    "args": "<C-c>"
  },
  {
    "command": "vscode-neovim.send",
    "key": "ctrl+g",
    "when": "editorTextFocus && neovim.mode == insert",
    "args": "<C-g>"
  },
  {
    "command": "vscode-neovim.send",
    "key": "ctrl+n",
    "when": "editorTextFocus",
    "args": "<C-n>"
  },
  /* ----------------------------------------------------- */
  /* ----- Disabled default settings d=====(￣▽￣*) ----- */
  {
    "key": "ctrl+k",
    "command": "-extension.vim_ctrl+k",
    "when": "editorTextFocus && vim.active && vim.use<C-k> && !inDebugRepl"
  },
  {
    "key": "ctrl+o",
    "command": "-workbench.action.files.openFile",
    "when": "true"
  },
  {
    "key": "ctrl+k ctrl+o",
    "command": "-workbench.action.files.openFolder",
    "when": "openFolderWorkspaceSupport"
  },
  {
    "key": "f3",
    "command": "-editor.action.nextMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+f",
    "command": "-actions.find",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "f3",
    "command": "-workbench.action.terminal.findNext",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+f",
    "command": "-workbench.action.terminal.focusFind",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+enter",
    "command": "-github.copilot.generate",
    "when": "editorTextFocus && github.copilot.activated"
  },
  {
    "key": "ctrl+right",
    "command": "-breadcrumbs.focusNext",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "key": "ctrl+left",
    "command": "-breadcrumbs.focusPrevious",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "key": "ctrl+pageup",
    "command": "-workbench.action.terminal.focusPrevious",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "ctrl+pagedown",
    "command": "-workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "ctrl+shift+oem_3",
    "command": "-workbench.action.terminal.new",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  {
    "key": "shift+tab",
    "command": "-extension.vim_shift+tab",
    "when": "editorFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "-workbench.action.quickOpenNavigatePreviousInEditorPicker",
    "when": "inEditorsPicker && inQuickOpen"
  },
  {
    "key": "ctrl+pagedown",
    "command": "-workbench.action.nextEditor"
  },
  {
    "key": "ctrl+pageup",
    "command": "-workbench.action.previousEditor"
  },
  {
    "key": "ctrl+o",
    "command": "-extension.vim_ctrl+o",
    "when": "editorTextFocus && vim.active && vim.use<C-o> && !inDebugRepl"
  },
  {
    "key": "ctrl+g",
    "command": "-workbench.action.gotoLine"
  },
  {
    "key": "ctrl+g",
    "command": "-extension.vim_ctrl+g",
    "when": "editorTextFocus && vim.active && vim.use<C-g> && !inDebugRepl"
  },
  {
    "key": "shift+tab",
    "command": "-outdent",
    "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus"
  },
  {
    "key": "ctrl+pagedown",
    "command": "-workbench.action.debug.nextConsole",
    "when": "inDebugRepl"
  },
  {
    "key": "ctrl+pageup",
    "command": "-workbench.action.debug.prevConsole",
    "when": "inDebugRepl"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "ctrl+shift+g g",
    "command": "-workbench.view.scm",
    "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "down",
    "command": "-selectNextCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "up",
    "command": "-selectPrevCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup",
    "when": "!activeEditorGroupEmpty"
  },
  {
    "key": "ctrl+tab",
    "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
    "when": "!activeEditorGroupEmpty"
  },
  {
    "key": "ctrl+tab",
    "command": "-workbench.action.quickOpenNavigateNextInEditorPicker",
    "when": "inEditorsPicker && inQuickOpen"
  },
  {
    "key": "ctrl+0",
    "command": "-workbench.action.focusSideBar"
  },
  {
    "key": "ctrl+p",
    "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "ctrl+p",
    "command": "-selectPrevCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "ctrl+p",
    "command": "-selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+p",
    "command": "-showPrevParameterHint",
    "when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "ctrl+p",
    "command": "-workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "ctrl+f",
    "command": "-vscode-neovim.ctrl-f",
    "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
  },
  {
    "key": "ctrl+s",
    "command": "-workbench.action.files.save"
  }
]
